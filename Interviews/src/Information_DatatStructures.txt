LinkedList:

List of advantages :

Linked List is Dynamic data Structure .
Linked List can grow and shrink during run time.
Insertion and Deletion Operations are Easier
Efficient Memory Utilization ,i.e no need to pre-allocate memory
Faster Access time,can be expanded in constant time without memory overhead
Linear Data Structures such as Stack,Queue can be easily implemeted using Linked list

Disadvantages of Linked List
Memory Usage
More memory is required to store elements in linked list as compared to array. Because in linked list each node contains a pointer and it requires extra memory for itself.
Traversal
Elements or nodes traversal is difficult in linked list. We can not randomly access any element as we do in array by index. For example if we want to access a node at position n then we have to traverse all the nodes before it. So, time required to access a node is large.
Reverse Traversing
In linked list reverse traversing is really difficult. In case of doubly linked list its easier but extra memory is required for back pointer hence wastage of memory.
If you know some other advantages and disadvantages of linked list then please mention by commenting below.


HashMap:
This cannot guarantee the order of insertion when returned back. Used for key-pair values


TreeMap:
TreeMap is an implementation of SortedMap and keeps keys in their natural order or a custom order specified by Comparator provided while creating TreeMap


Set:
The set interface present in the java.util package and extends the Collection interface is an unordered collection of objects in which duplicate values cannot be stored. 

TreeSet:
A TreeSet is a set where the elements are sorted.

HashSet:
A HashSet is a set where the elements are not sorted or ordered. It is faster than a TreeSet. The HashSet is an implementation of a Set.

Long Vs Int
The datatype int is of 32-bits.	The data type long is of 64-bits.

Call By Value vs Call By Reference:
But Java uses only call by value. It creates a copy of references and pass them as value to the methods. If reference contains objects, then the value of an object can be modified in the method but not the entire object. 



LinkedHashMap:
It is exactly like HashMap, except that when you iterate over it, it presents the items in the insertion order.